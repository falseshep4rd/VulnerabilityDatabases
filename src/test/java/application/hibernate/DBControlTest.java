package application.hibernate;

import application.model.database.*;
import jakarta.persistence.EntityManagerFactory;
import jakarta.persistence.Persistence;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertTrue;

public class DBControlTest {
    private final EntityManagerFactory emf = Persistence.createEntityManagerFactory("VulnerabilityDatabases");
    private UserControl userControl;
    private ItemControl itemControl;
    private DBControl dbControl;
    private User user;
    private Items items;
    private NVDModel nvdModel;
    private InvictiModel invictiModel;
    private MitreModel mitreModel;
    private SnykDBModel snykDBModel;
    private VulnLabModel vulnLabModel;
    private WireSharkModel wireSharkModel;

    @BeforeEach
    public void setup() {
        userControl = new UserControl(emf);
        itemControl = new ItemControl(emf);
        dbControl = new DBControl(emf);
        user = new User("name", "password", "saras@gmail.com", "salt");
        items = new Items("log", user);
        nvdModel = new NVDModel("name", "name", "name", items);
        invictiModel = new InvictiModel("name", "name", "name", items);
        mitreModel = new MitreModel("name", "name", items);
        snykDBModel = new SnykDBModel("name","name", "name", "name", items);
        vulnLabModel = new VulnLabModel("name", "name", "name", items);
        wireSharkModel = new WireSharkModel("name", "name", "name", items);
    }

    @Test
    public void addToDBTest() {
        userControl.createUser(user);
        itemControl.addItem(items);
        assertTrue(dbControl.addToDB(nvdModel));
    }

    @Test
    public void deleteNVDDBTest() {
        userControl.createUser(user);
        itemControl.addItem(items);
        dbControl.addToDB(nvdModel);
        assertTrue(dbControl.deleteDB(items, 1));
    }

    @Test
    public void getNVDListTest() {
        userControl.createUser(user);
        itemControl.addItem(items);
        dbControl.addToDB(nvdModel);
        assertEquals(dbControl.getNVDList(items).size(), 1);
    }
    @Test
    public void deleteInvictiDBTest() {
        userControl.createUser(user);
        itemControl.addItem(items);
        dbControl.addToDB(invictiModel);
        assertTrue(dbControl.deleteDB(items, 5));
    }

    @Test
    public void getInvictiListTest() {
        userControl.createUser(user);
        itemControl.addItem(items);
        dbControl.addToDB(invictiModel);
        assertEquals(dbControl.getInvictiList(items).size(), 1);
    }
    @Test
    public void deleteMitreDBTest() {
        userControl.createUser(user);
        itemControl.addItem(items);
        dbControl.addToDB(mitreModel);
        assertTrue(dbControl.deleteDB(items, 2));
    }

    @Test
    public void getMitreListTest() {
        userControl.createUser(user);
        itemControl.addItem(items);
        dbControl.addToDB(mitreModel);
        assertEquals(dbControl.getMitreList(items).size(), 1);
    }
    @Test
    public void deleteSnykDBTest() {
        userControl.createUser(user);
        itemControl.addItem(items);
        dbControl.addToDB(snykDBModel);
        assertTrue(dbControl.deleteDB(items, 4));
    }

    @Test
    public void getSnykListTest() {
        userControl.createUser(user);
        itemControl.addItem(items);
        dbControl.addToDB(snykDBModel);
        assertEquals(dbControl.getSnykDBList(items).size(), 1);
    }
    @Test
    public void deleteVulnLabDBTest() {
        userControl.createUser(user);
        itemControl.addItem(items);
        dbControl.addToDB(vulnLabModel);
        assertTrue(dbControl.deleteDB(items, 6));
    }

    @Test
    public void getVulnLabListTest() {
        userControl.createUser(user);
        itemControl.addItem(items);
        dbControl.addToDB(vulnLabModel);
        assertEquals(dbControl.getVulnLabList(items).size(), 1);
    }
    @Test
    public void deleteWireSharkDBTest() {
        userControl.createUser(user);
        itemControl.addItem(items);
        dbControl.addToDB(wireSharkModel);
        assertTrue(dbControl.deleteDB(items, 3));
    }

    @Test
    public void getWireSharkListTest() {
        userControl.createUser(user);
        itemControl.addItem(items);
        dbControl.addToDB(wireSharkModel);
        assertEquals(dbControl.getWireSharkList(items).size(), 1);
    }
}
