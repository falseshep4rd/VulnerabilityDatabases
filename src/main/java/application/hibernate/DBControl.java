package application.hibernate;

import application.model.database.Items;
import application.model.database.MitreModel;
import application.model.database.NVDModel;
import jakarta.persistence.EntityManager;
import jakarta.persistence.EntityManagerFactory;
import jakarta.persistence.Query;

import java.util.ArrayList;
import java.util.List;

public class DBControl {
    public DBControl(EntityManagerFactory emf) {
        this.emf = emf;
    }

    private EntityManagerFactory emf = null;

    public EntityManager getEntityManager() {
        return emf.createEntityManager();
    }

    public void addNVDToDB(NVDModel nvd) {
        EntityManager em = null;
        try {
            em = getEntityManager();
            em.getTransaction().begin();
            em.persist(nvd);
            em.getTransaction().commit();
        } finally {
            if (em != null) {
                em.close();
            }
        }
    }

    public void deleteNVD(Items items) {
        EntityManager em = getEntityManager();
        try {
            em.getTransaction().begin();
            Query query = em.createQuery("DELETE from NVDModel where items = :id").setParameter("id", items);
            query.executeUpdate();
            em.getTransaction().commit();
        } catch (Exception e) {
            e.printStackTrace();
        } finally {
            if (em != null) {
                em.close();
            }
        }
    }
    public List<NVDModel> getNVDList(Items item) {
        EntityManager em = getEntityManager();
        List<NVDModel> nvdModels = new ArrayList<>();
        try {
            Query query = em.createQuery("Select n from NVDModel n where items =:items")
                    .setParameter("items", item);
            nvdModels = query.getResultList();
        } catch (Exception e) {
            e.printStackTrace();
        } finally {
            em.close();
        }
        return nvdModels;
    }


    public void addMitreToDB(MitreModel mitre) {
        EntityManager em = null;
        try {
            em = getEntityManager();
            em.getTransaction().begin();
            em.persist(mitre);
            em.getTransaction().commit();
        } finally {
            if (em != null) {
                em.close();
            }
        }
    }

    public void deleteMitre(Items items) {
        EntityManager em = getEntityManager();
        try {
            em.getTransaction().begin();
            Query query = em.createQuery("DELETE from MitreModel where items = :id").setParameter("id", items);
            query.executeUpdate();
            em.getTransaction().commit();
        } catch (Exception e) {
            e.printStackTrace();
        } finally {
            if (em != null) {
                em.close();
            }
        }
    }

    public List<MitreModel> getMitreList(Items item) {
        EntityManager em = getEntityManager();
        List<MitreModel> mitreModels = new ArrayList<>();
        try {
            Query query = em.createQuery("Select n from MitreModel n where items =:items")
                    .setParameter("items", item);
            mitreModels = query.getResultList();
        } catch (Exception e) {
            e.printStackTrace();
        } finally {
            em.close();
        }
        return mitreModels;
    }

}
