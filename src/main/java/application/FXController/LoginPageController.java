package application.FXController;

import application.hibernate.UserControl;
import application.model.database.User;
import jakarta.persistence.*;
import javafx.event.ActionEvent;
import javafx.fxml.FXML;
import javafx.fxml.FXMLLoader;
import javafx.scene.Parent;
import javafx.scene.Scene;
import javafx.scene.control.Alert;
import javafx.scene.control.Button;
import javafx.scene.control.PasswordField;
import javafx.scene.control.TextField;
import javafx.stage.Stage;

import java.io.IOException;
import java.util.Objects;

public class LoginPageController {
    @FXML
    public Button logInBtn;
    @FXML
    public PasswordField pswField;
    @FXML
    public TextField loginField;
    @FXML
    public Button signUpBtn;

    private final EntityManagerFactory factory = Persistence.createEntityManagerFactory("VulnerabilityDatabases");
    private final UserControl userControl = new UserControl(factory);

    public void createUser(ActionEvent actionEvent) throws Exception {
        FXMLLoader loader = new FXMLLoader(getClass().getResource("/fxml/CreateUser.fxml"));
        Parent root = loader.load();

        Stage stage = (Stage) signUpBtn.getScene().getWindow();
        stage.setScene(new Scene(root));
        stage.show();
    }

    private void noSuchUser() {
        Alert alert = new Alert(Alert.AlertType.ERROR);
        alert.setTitle("Vulnerability Databases");
        alert.setHeaderText("No such user");
        alert.setContentText("Incorrect credentials");
        alert.showAndWait();
    }

    private void loadMainWindow(User user) throws IOException {
        FXMLLoader loader = new FXMLLoader(getClass().getResource("/fxml/Main.fxml"));
        Parent root = loader.load();

        MainController mainController = loader.getController();
        mainController.setUser(user);
        mainController.setUsername(user.getUsername());
        mainController.populateList();
        mainController.checkForNewEntries();

        Stage stage = (Stage) logInBtn.getScene().getWindow();
        stage.setScene(new Scene(root));
        stage.show();
    }

    @FXML
    private void login() {
        EntityManagerFactory factory = Persistence.createEntityManagerFactory("VulnerabilityDatabases");
        EntityManager em = factory.createEntityManager();
        String strQuery = "SELECT u FROM User u WHERE u.username = :userUsername";
        TypedQuery<User> tq = em.createQuery(strQuery, User.class);
        tq.setParameter("userUsername", loginField.getText());
        User user;
        try{
            user = tq.getSingleResult();
            if(Objects.equals(userControl.getHashedPassword(pswField.getText(), user.getSalt()), user.getPassword())){
                loadMainWindow(user);
            } else {
                noSuchUser();
            }
        } catch (IOException | NoResultException e) {
            e.printStackTrace();
            noSuchUser();
        } finally {
            em.close();
        }
    }
}
