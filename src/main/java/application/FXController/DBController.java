package application.FXController;

import application.hibernate.DBControl;
import application.hibernate.ItemControl;
import application.model.DB;
import application.model.database.Items;
import application.utils.OpenWebpage;
import jakarta.persistence.EntityManagerFactory;
import jakarta.persistence.Persistence;
import javafx.scene.control.TableCell;
import javafx.scene.control.TableColumn;
import javafx.scene.text.Text;
import lombok.Data;

import java.io.IOException;
import java.net.URISyntaxException;
import java.util.List;
import java.util.Objects;

@Data
public abstract class DBController{
    protected String url;
    protected List<Items> items;
    protected Items itemObj = new Items();
    protected String search;

    protected final EntityManagerFactory factory = Persistence.createEntityManagerFactory("VulnerabilityDatabases");
    protected final DBControl dbControl = new DBControl(factory);
    protected final ItemControl itemControl = new ItemControl(factory);

    protected void setWrapCellFactory(TableColumn<DB, String> table) {
        table.setCellFactory(tablecol -> {
            TableCell<DB, String> cell = new TableCell<>();
            Text text = new Text();
            cell.setGraphic(text);
            text.wrappingWidthProperty().bind(cell.widthProperty());
            text.textProperty().bind(cell.itemProperty());
            return cell;
        });
    }

    protected void openWebpage(String url) throws IOException, URISyntaxException {
        OpenWebpage.openWebpage(url);
    }

    protected void getItemId(String item) {
        for (Items i : items) {
            if (Objects.equals(i.getItem(), item)) {
                itemObj = i;
                break;
            }
        }
    }
}
